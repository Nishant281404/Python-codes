###################################################### ----> APPROACH 1 OR NAIVE APPROACH<------------#########################################################
class Solution:

	def checkTriplet(self,arr):
	    n= len(arr)
	    for i in range(0,n-2): # iterating til  last second last element
	        for j in range(i+1,n-1):
	            for k in range(n):
	                x = arr[i]*arr[i]
	                y = arr[j]*arr[j]
	                z = arr[k]*arr[k]
	                if x == y+z or y == x+z or z == x+y:
	                    return True  
	    return False  


#################################################### -----> Optimal <---------------------------------####################################################
class Solution:
    def checkTriplet(self, arr):
        n = len(arr)
        
        # Square all elements
        for i in range(n):
            arr[i] = arr[i] * arr[i] // arr=[x*x for x in arr]
        
        # Sort the squared values
        arr.sort()
        
        # Iterate from the largest element to the smallest
        for i in range(n - 1, 1, -1):  # i is the hypotenuse index
            l, r = 0, i - 1  # Two-pointer 
            
            while l < r:
                if arr[l] + arr[r] == arr[i]:
                    return True  
                
                if arr[l] + arr[r] < arr[i]:
                    l += 1  # Increase sum
                else:
                    r -= 1  # Decrease sum
        
        return False  
